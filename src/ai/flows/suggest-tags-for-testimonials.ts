// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview AI-powered tag suggestion for testimonials.
 *
 * - suggestTagsForTestimonial - A function that suggests tags for a testimonial.
 * - SuggestTagsForTestimonialInput - The input type for the suggestTagsForTestimonial function.
 * - SuggestTagsForTestimonialOutput - The return type for the suggestTagsForTestimonial function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestTagsForTestimonialInputSchema = z.object({
  testimonialText: z.string().describe('The text content of the testimonial.'),
});
export type SuggestTagsForTestimonialInput = z.infer<typeof SuggestTagsForTestimonialInputSchema>;

const SuggestTagsForTestimonialOutputSchema = z.object({
  suggestedTags: z.array(z.string()).describe('An array of suggested tags for the testimonial.'),
});
export type SuggestTagsForTestimonialOutput = z.infer<typeof SuggestTagsForTestimonialOutputSchema>;

export async function suggestTagsForTestimonial(input: SuggestTagsForTestimonialInput): Promise<SuggestTagsForTestimonialOutput> {
  return suggestTagsForTestimonialFlow(input);
}

const suggestTagsForTestimonialPrompt = ai.definePrompt({
  name: 'suggestTagsForTestimonialPrompt',
  input: {schema: SuggestTagsForTestimonialInputSchema},
  output: {schema: SuggestTagsForTestimonialOutputSchema},
  prompt: `Suggest relevant tags for the following testimonial text:

{{{testimonialText}}}

Please provide only an array of tags. Do not include any other text.`,
});

const suggestTagsForTestimonialFlow = ai.defineFlow(
  {
    name: 'suggestTagsForTestimonialFlow',
    inputSchema: SuggestTagsForTestimonialInputSchema,
    outputSchema: SuggestTagsForTestimonialOutputSchema,
  },
  async input => {
    const {output} = await suggestTagsForTestimonialPrompt(input);
    return output!;
  }
);
